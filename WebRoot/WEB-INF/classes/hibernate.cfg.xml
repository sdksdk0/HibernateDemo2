<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
	<!-- 相当于连接池 -->
	<session-factory>
		<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/day15</property>
		<property name="hibernate.connection.username">zp</property>
		<property name="hibernate.connection.password">a</property>
		
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
		
		<!-- 显示生产sql语句 -->
		<property name="hibernate.show_sql">true</property>
		<!-- 格式化方式显示sql -->
		<property name="hibernate.format_sql">true</property>
		
		
		<!-- 表的创建 ,先有表，再有映射，实际开发中通过表自动生成hbm.xml映射文件
			取值：validate:程序运行时，将校验映射文件和表的对应关系，如果一一对应程序正常运行，如果不正常则抛异常。
			     create :每一次都将创建表，如果表已经存在了就删除，程序结束之后表还在
			     create-drop:每一次都将创建表，如果表已经存在了就删除,程序结束之后表也删除了, 必须执行factory.close()
				 update:如果表不存在就创建，如果存在，将维护映射到表的关系。只负责添加，但不进行删除。
				
		-->
		
		
		<property name="hibernate.hbm2ddl.auto">update</property>
		
		<!-- 取消bena校验 -->
		<property name="javax.persistence.validation.mode">none</property>
		
		
		<!-- 将session绑定到本地线程中     
			当在cfg.xml配置了thread，SessionFactory提供的getCurrentSession()将可以使用
			get():相当于map.get(Thread)
			set(value): 相当于map.put(Thread,value)
			remove()  :map.remove(Thread)
		  -->
		<property name="hibernate.current_session_context_class">thread</property>
		
		<mapping  resource="cn/tf/domain/Person.hbm.xml"/>
		<mapping  resource="cn/tf/domain/Book.hbm.xml"/>
		<mapping  resource="cn/tf/domain/Category.hbm.xml"/>
		
	</session-factory>
</hibernate-configuration>







